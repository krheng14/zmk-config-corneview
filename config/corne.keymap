/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Mapping for different layers
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define MEDIA   3



/{
    behaviors {
        // Implement the mod-morph for "Escape Tab"
        esctab: behavior-mod-morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            label = "ESC/TAB";
            bindings = <&kp TAB>, <&kp ESC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // Implement the mod-morph for "Backspace Delete"
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            label = "BSPC/DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // Implement the mod-morph for "Volume Down
        vol_dn: vol_dn {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            label = "RGUI/VOL_DN";
            bindings = <&kp H>, <&C_VOL_DN>;
            mods = <(MOD_RGUI)>;
        };
        // Implement the mod-morph for "Volume Up"
        vol_up: vol_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            label = "RGUI/VOL_UP";
            bindings = <&kp J>, <&C_VOL_UP>;
            mods = <(MOD_RGUI)>;
        };
        // Implement the mod-morph for "Volume Mute"
        vol_m: vol_m {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            label = "RGUI/VOL_M";
            bindings = <&kp K>, <&C_VOL_MUTE>;
            mods = <(MOD_RGUI)>;
        };    
        // Implement the mod-morph for "Brightness Down"
        bri_dn: bri_dn {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            label = "RGUI/BRI_DN";
            bindings = <&kp Y>, <&C_BRI_DN>;
            mods = <(MOD_RGUI)>;
        };  
        // Implement the mod-morph for "Brightness Up"
        bri_up: bri_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            label = "RGUI/BRI_UP";
            bindings = <&kp U>, <&C_BRI_UP>;
            mods = <(MOD_RGUI)>;
        };        
    };
};

/ {
    macros {
        lock_screen: lock_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LGUI &kp LCTRL &kp Q>
                ;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC/TAB |  Q  |  W  |  E  |  R  |  T  |  |  Y  |  U  |  I  |  O  |  P  | BKSP/DEL |
// | SHFT    |  A  |  S  |  D  |  F  |  G  |  |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL    |  Z  |  X  |  C  |  V  |  B  |  |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                       | CTRL| ALT | GUI |  | SPC | RGUI | SHFT |
                        
                bindings = <
   &esctab    &kp Q &kp W &kp E &kp R &kp T           &bri_dn &bri_up &kp I  &kp O   &kp P    &bspc_del
   &kp LSHFT  &kp A &kp S &kp D &kp F &kp G           &vol_dn &vol_up &vol_m &kp L   &kp SEMI &kp SQT
   &kp LCTRL  &kp Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                    &kp LALT &kp LGUI &lt RAISE SPACE &lt LOWER SPACE &kp RGUI &kp RSHFT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |   `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | CTRL |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | ALT | GUI |     |   |     | GUI | ALT |
                
                bindings = <
   &kp GRAVE  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LCTRL  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                        &kp LALT     &kp LGUI     &trans         &trans   &kp RGUI &kp RSHFT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | SHFT |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | CTRL |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | ALT | GUI |     |   |     | GUI | ALT |
                bindings = <
   &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LALT &kp LGUI &trans      &trans &kp RGUI  &kp RSHFT
                        >;
                };
        };
};
